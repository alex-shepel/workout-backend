import { BeforeInsert, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';
import { ApiProperty } from '@nestjs/swagger';
import { hash } from 'bcrypt';

@Entity({ name: 'users' })
export class UserEntity {
  @ApiProperty({ example: 1, description: 'The autogenerated unique identifier.' })
  @PrimaryGeneratedColumn()
  ID: number;

  @ApiProperty({
    example: 'alex@shepel.com',
    description: "User's email. It will be used for the account activation.",
  })
  @Column({
    unique: true,
  })
  Email: string;

  @ApiProperty({
    example: 1,
    description: "User's name. It will be displayed as nickname inside the app.",
  })
  @Column({
    nullable: true,
  })
  Name: string;

  @ApiProperty({
    example: '31415',
    description: 'The password.',
  })
  @Column()
  Password: string;

  @BeforeInsert()
  async hashPassword() {
    this.Password = await hash(this.Password, Number(process.env.SALT));
  }
}
